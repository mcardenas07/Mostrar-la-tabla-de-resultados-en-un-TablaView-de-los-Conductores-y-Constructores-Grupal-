package application;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.TextAlignment;
import javafx.stage.Stage;

public class MainMenu extends Application {

    @Override
    public void start(Stage primaryStage) {
        primaryStage.setTitle("MENU");

        // Crear el texto de instrucciones
        Label instructionsLabel = new Label("Seleccione la opción que desea consultar:");
        instructionsLabel.setFont(Font.font("Arial", 16));
        instructionsLabel.setTextFill(Color.WHITE);
        instructionsLabel.setPadding(new Insets(20));

        // Crear botones
        Button driverPointsChartButton = createStyledButton("TableView Constructor");
        Button driverTableButton = createStyledButton("TableView Drivers");
        Button constructorPointsChartButton = createStyledButton("Puntos Maximo");
        Button constructorTableButton = createStyledButton("Gráfico de Barras - Total de Puntos");
        Button constructorRankChartButton = createStyledButton("Gráfico de Barras - Rank");

        // Configurar acciones para los botones
        driverPointsChartButton.setOnAction(event -> new Main().start(new Stage()));
        driverTableButton.setOnAction(event -> new MainDrivers().start(new Stage()));
        constructorPointsChartButton.setOnAction(event -> new MainMax().start(new Stage()));
        constructorTableButton.setOnAction(event -> new MainPoint().start(new Stage()));
        constructorRankChartButton.setOnAction(event -> new MainDiagramRank().start(new Stage()));

        // Crear el contenedor VBox y agregar elementos
        VBox mainMenu = new VBox(10, instructionsLabel, driverPointsChartButton, driverTableButton, constructorPointsChartButton, constructorTableButton, constructorRankChartButton);
        mainMenu.setAlignment(Pos.CENTER);
        mainMenu.setPadding(new Insets(10));

        // Cargar la imagen de fondo
        Image backgroundImage = new Image("file:///C:/Users/GARCIA/Downloads/Diagrama_Constructor/demo_jdbc/src/resources/fondo_01.jpg");
        ImageView backgroundImageView = new ImageView(backgroundImage);
        
        // Configurar la imagen de fondo para ajustar al tamaño del StackPane
        backgroundImageView.setFitWidth(550);
        backgroundImageView.setFitHeight(450);
        backgroundImageView.setPreserveRatio(false);  // Ajusta la imagen para llenar el espacio sin mantener la relación de aspecto

        // Crear el contenedor StackPane y agregar la imagen de fondo y el VBox
        StackPane root = new StackPane();
        root.getChildren().addAll(backgroundImageView, mainMenu);

        // Crear la escena y establecerla en el escenario
        Scene mainScene = new Scene(root, 550, 450);
        primaryStage.setScene(mainScene);
        primaryStage.show();
    }

    private Button createStyledButton(String text) {
        Button button = new Button(text);
        button.setFont(Font.font("Arial", 12));
        button.setTextFill(Color.WHITE);
        button.setStyle("-fx-background-color: #007BFF; -fx-border-color: #0056b3; -fx-border-width: 2px;");
        button.setPadding(new Insets(8));
        button.setMinWidth(200);
        button.setTextAlignment(TextAlignment.CENTER);
        return button;
    }

    public static void main(String[] args) {
        launch(args);
    }
}
